{"version":3,"sources":["../../src/models/user.model.js"],"sourcesContent":["const mongoose = require(\"mongoose\")\nconst bcrypt = require(\"bcrypt\")\nconst Schema = mongoose.Schema\n\nlet userSchema = new Schema({\n  name: String,\n  username: String,\n  email: String,\n  password: String,\n\n  roblox_id: String,\n  roblox_username: String,\n  roblox_displayname: String,\n  \n  flags: [String],\n})\n\n// Methods\nuserSchema.methods.generateHash = password => bcrypt.hashSync(password, 10)\n\nuserSchema.methods.validatePassword = function (password) {\n  return bcrypt.compareSync(password, this.password)\n}\n\nmodule.exports = mongoose.model(\"user\", userSchema)"],"names":["mongoose","require","bcrypt","Schema","userSchema","name","String","username","email","password","roblox_id","roblox_username","roblox_displayname","flags","methods","generateHash","hashSync","validatePassword","compareSync","module","exports","model"],"mappings":";AAAA,MAAMA,WAAWC,QAAQ;AACzB,MAAMC,SAASD,QAAQ;AACvB,MAAME,SAASH,SAASG,MAAM;AAE9B,IAAIC,aAAa,IAAID,OAAO;IAC1BE,MAAMC;IACNC,UAAUD;IACVE,OAAOF;IACPG,UAAUH;IAEVI,WAAWJ;IACXK,iBAAiBL;IACjBM,oBAAoBN;IAEpBO,OAAO;QAACP;KAAO;AACjB;AAEA,UAAU;AACVF,WAAWU,OAAO,CAACC,YAAY,GAAGN,CAAAA,WAAYP,OAAOc,QAAQ,CAACP,UAAU;AAExEL,WAAWU,OAAO,CAACG,gBAAgB,GAAG,SAAUR,QAAQ;IACtD,OAAOP,OAAOgB,WAAW,CAACT,UAAU,IAAI,CAACA,QAAQ;AACnD;AAEAU,OAAOC,OAAO,GAAGpB,SAASqB,KAAK,CAAC,QAAQjB"}