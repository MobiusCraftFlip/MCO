{"version":3,"sources":["../../src/routes/gloc.js"],"sourcesContent":["const { Mongoose } = require(\"mongoose\")\nconst { createConnection, MongoClient, ServerApiVersion } = require(\"mongodb\")\nconst { Router } = require(\"express\")\nconst { getUsernameFromId } = require(\"noblox.js\")\n\nconst {check} = require(\"../util/permissions\")\n\nconst uri = process.env.MOKORE_URI\nconst client = new MongoClient(uri,  {\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true,\n  }\n})\n\nlet connected = false\nconst Client = async () => {\n  if (connected) {\n    return client\n  } else {\n    await client.connect()\n    connected = true\n    return client\n  }\n}\n\nconst router = Router()\n\nrouter.get(\"/warnings\", async (req, res) => {\n  if (!req.isAuthenticated()) {\n    return res.render(\"404\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n    })\n  }\n  if (req.user && req.user.flags && check(req.user, \"gloc.warnings.read\")) {\n    const warnings = await (await Client()).db(\"test\").collection(\"warning_entity\").find().sort({_id: -1}).limit(50).toArray()\n    const names = []\n    warnings.forEach((value, index) => {\n      names[index] = getUsernameFromId(value.userid)\n    })\n    let realNames\n    try {\n      realNames = await Promise.all(names)\n    } catch (error) {\n      try {\n        realNames = await Promise.all(names)\n      } catch (error) {\n        res.sendStatus(500)\n      }\n    }\n    realNames.forEach((name, index) => {\n      warnings[index].name = name\n    })\n    return res.render(\"gloc/warnings\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n      warnings: warnings,\n    })\n  } else {\n    return res.render(\"404\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n    })\n  }\n})\n\nrouter.get(\"/players/:player\", async (req, res) => {\n  if (!req.isAuthenticated()) {\n    return res.render(\"404\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n    })\n  }\n    \n  if (req.user && ((req.user.flags && check(req.user, \"gloc.warnings.read\") || req.user.roblox_id == req.params.player))) {\n        \n    const warnings = await (await Client()).db(\"test\").collection(\"warning_entity\").find({userid: req.params.player}).sort().toArray()\n        \n    const names = []\n    warnings.forEach((value, index) => {\n      names[index] = getUsernameFromId(value.userid)\n    })\n\n    const realNames = await Promise.all(names)\n    realNames.forEach((name, index) => {\n      warnings[index].name = name\n    })\n    return res.render(\"gloc/player\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n      warnings: warnings,\n    })\n  } else {\n    return res.render(\"404\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n    })\n  }\n})\n\nmodule.exports = router"],"names":["Mongoose","require","createConnection","MongoClient","ServerApiVersion","Router","getUsernameFromId","check","uri","process","env","MOKORE_URI","client","serverApi","version","v1","strict","deprecationErrors","connected","Client","connect","router","get","req","res","isAuthenticated","render","isAuth","user","profile","flags","warnings","db","collection","find","sort","_id","limit","toArray","names","forEach","value","index","userid","realNames","Promise","all","error","sendStatus","name","roblox_id","params","player","module","exports"],"mappings":"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"}