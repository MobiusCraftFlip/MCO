{"version":3,"sources":["../../src/routes/gloc.js"],"sourcesContent":["const { Mongoose } = require(\"mongoose\")\nconst { createConnection, MongoClient, ServerApiVersion } = require(\"mongodb\")\nconst { Router } = require(\"express\")\nconst { getUsernameFromId } = require(\"noblox.js\")\n\nconst {check} = require(\"../util/permissions\")\nconst { unautherisedRedirect } = require(\"../util/express\")\n\nconst uri = process.env.MOKORE_URI\nconst client = new MongoClient(uri,  {\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true,\n  }\n})\n\nlet connected = false\nconst Client = async () => {\n  if (connected) {\n    return client\n  } else {\n    await client.connect()\n    connected = true\n    return client\n  }\n}\n\nconst router = Router()\n\nrouter.get(\"/warnings\", async (req, res) => {\n  if (!req.isAuthenticated()) {\n    \n    return unautherisedRedirect(req,res)\n  }\n  if (req.user && req.user.flags && check(req.user, \"gloc.warnings.read\")) {\n    const warnings = await (await Client()).db(\"test\").collection(\"warning_entity\").find().sort({_id: -1}).limit(50).toArray()\n    const names = []\n    warnings.forEach((value, index) => {\n      names[index] = getUsernameFromId(value.userid)\n    })\n    let realNames\n    try {\n      realNames = await Promise.all(names)\n    } catch (error) {\n      try {\n        realNames = await Promise.all(names)\n      } catch (error) {\n        res.sendStatus(500)\n      }\n    }\n    realNames.forEach((name, index) => {\n      warnings[index].name = name\n    })\n    return res.render(\"gloc/warnings\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n      warnings: warnings,\n    })\n  } else {\n    \n    return unautherisedRedirect(req,res)\n  }\n})\n\nrouter.get(\"/players/:player\", async (req, res) => {\n  if (!req.isAuthenticated()) {\n    \n    return unautherisedRedirect(req,res)\n  }\n    \n  if (req.user && ((req.user.flags && check(req.user, \"gloc.warnings.read\") || req.user.roblox_id == req.params.player))) {\n        \n    const warnings = await (await Client()).db(\"test\").collection(\"warning_entity\").find({userid: req.params.player}).sort().toArray()\n        \n    const names = []\n    warnings.forEach((value, index) => {\n      names[index] = getUsernameFromId(value.userid)\n    })\n\n    const realNames = await Promise.all(names)\n    realNames.forEach((name, index) => {\n      warnings[index].name = name\n    })\n    return res.render(\"gloc/player\", {\n      isAuth: req.isAuthenticated(),\n      user: req.user,\n      profile: null,\n      warnings: warnings,\n    })\n  } else {\n    \n    return unautherisedRedirect(req,res)\n  }\n})\n\nmodule.exports = router"],"names":["Mongoose","require","createConnection","MongoClient","ServerApiVersion","Router","getUsernameFromId","check","unautherisedRedirect","uri","process","env","MOKORE_URI","client","serverApi","version","v1","strict","deprecationErrors","connected","Client","connect","router","get","req","res","isAuthenticated","user","flags","warnings","db","collection","find","sort","_id","limit","toArray","names","forEach","value","index","userid","realNames","Promise","all","error","sendStatus","name","render","isAuth","profile","roblox_id","params","player","module","exports"],"mappings":"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"}