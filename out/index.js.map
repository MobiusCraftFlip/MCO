{"version":3,"sources":["../src/index.ts"],"sourcesContent":["require(\"dotenv\").config()\n\nimport RedisStore from \"connect-redis\"\nimport session from \"express-session\"\nimport redisClient from \"./config/redis.config\";\nimport mongoose from \"mongoose\"\nimport express from \"express\"\nrequire('express-async-errors');\nconst app = express();\nconst port = process.env.PORT || 8080;\nconst passport = require(\"passport\");\nconst flash = require(\"connect-flash\");\nconst morgan = require(\"morgan\");\nconst cookieParser = require(\"cookie-parser\");\nconst bodyParser = require(\"body-parser\");\nconst path = require(\"path\");\n\nconst User = require(\"./models/user.model\").default;\nconst dbConfig = require(\"./config/database.config\");\nconst { randomBytes } = require(\"crypto\");\nconst { refreshFlags } = require(\"./models/flags.model\");\n\n// Configuration\nmongoose.connect(dbConfig.url, {\n  // useNewUrlParser: true\n}).then(() => {\n  refreshFlags\n}).catch((error) => {\n  console.warn(error)\n})\nrequire(\"./config/passport.config\")(passport);\n\n// Express setup\napp.use(morgan(\"dev\"));\napp.use(cookieParser());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.set(\"view engine\", \"ejs\");\napp.set('view options', {root: path.join(__dirname, \"..\",\"views\")});\n\napp.set(\"trust proxy\", true)\n\napp.set(\"views\", path.join(__dirname, \"..\",\"views\"));\napp.use(express.static(__dirname + \"/../public\"));\n\napp.use((req,res,next) => {\n  const key = `access:${req.ip.replaceAll(\":\", \".\")}:${encodeURIComponent(req.url)}`\n  redisClient.multi().incr(key).expire(key, 2000).exec()\n  next()\n})\n\n// Initialize store.\nlet redisStore = new RedisStore({\n  client: redisClient,\n  prefix: \"mco:\",\n})\n\n// Passport setup\napp.use(session({\n  store: redisStore,\n  secret: process.env.SESSION_SECRET,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 60*60*1000,\n  }\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\n\n// Routes\nrequire(\"./routes/routes\")(app, passport, User);\n\n// Launch server\napp.listen(port, () => console.log(`server started on port ${port}`));"],"names":["require","config","app","express","port","process","env","PORT","passport","flash","morgan","cookieParser","bodyParser","path","User","default","dbConfig","randomBytes","refreshFlags","mongoose","connect","url","then","catch","error","console","warn","use","urlencoded","extended","json","set","root","join","__dirname","static","req","res","next","key","ip","replaceAll","encodeURIComponent","redisClient","multi","incr","expire","exec","redisStore","RedisStore","client","prefix","session","store","secret","SESSION_SECRET","resave","saveUninitialized","cookie","maxAge","initialize","listen","log"],"mappings":";;;;qEAEuB;uEACH;oEACI;iEACH;gEACD;;;;;;AANpBA,QAAQ,UAAUC,MAAM;AAOxBD,QAAQ;AACR,MAAME,MAAMC,IAAAA,gBAAO;AACnB,MAAMC,OAAOC,QAAQC,GAAG,CAACC,IAAI,IAAI;AACjC,MAAMC,WAAWR,QAAQ;AACzB,MAAMS,QAAQT,QAAQ;AACtB,MAAMU,SAASV,QAAQ;AACvB,MAAMW,eAAeX,QAAQ;AAC7B,MAAMY,aAAaZ,QAAQ;AAC3B,MAAMa,OAAOb,QAAQ;AAErB,MAAMc,OAAOd,QAAQ,uBAAuBe,OAAO;AACnD,MAAMC,WAAWhB,QAAQ;AACzB,MAAM,EAAEiB,WAAW,EAAE,GAAGjB,QAAQ;AAChC,MAAM,EAAEkB,YAAY,EAAE,GAAGlB,QAAQ;AAEjC,gBAAgB;AAChBmB,iBAAQ,CAACC,OAAO,CAACJ,SAASK,GAAG,EAAE;AAE/B,GAAGC,IAAI,CAAC;IACNJ;AACF,GAAGK,KAAK,CAAC,CAACC;IACRC,QAAQC,IAAI,CAACF;AACf;AACAxB,QAAQ,4BAA4BQ;AAEpC,gBAAgB;AAChBN,IAAIyB,GAAG,CAACjB,OAAO;AACfR,IAAIyB,GAAG,CAAChB;AACRT,IAAIyB,GAAG,CAACf,WAAWgB,UAAU,CAAC;IAC5BC,UAAU;AACZ;AACA3B,IAAIyB,GAAG,CAACf,WAAWkB,IAAI;AACvB5B,IAAI6B,GAAG,CAAC,eAAe;AACvB7B,IAAI6B,GAAG,CAAC,gBAAgB;IAACC,MAAMnB,KAAKoB,IAAI,CAACC,WAAW,MAAK;AAAQ;AAEjEhC,IAAI6B,GAAG,CAAC,eAAe;AAEvB7B,IAAI6B,GAAG,CAAC,SAASlB,KAAKoB,IAAI,CAACC,WAAW,MAAK;AAC3ChC,IAAIyB,GAAG,CAACxB,gBAAO,CAACgC,MAAM,CAACD,YAAY;AAEnChC,IAAIyB,GAAG,CAAC,CAACS,KAAIC,KAAIC;IACf,MAAMC,MAAM,CAAC,OAAO,EAAEH,IAAII,EAAE,CAACC,UAAU,CAAC,KAAK,KAAK,CAAC,EAAEC,mBAAmBN,IAAIf,GAAG,EAAE,CAAC;IAClFsB,oBAAW,CAACC,KAAK,GAAGC,IAAI,CAACN,KAAKO,MAAM,CAACP,KAAK,MAAMQ,IAAI;IACpDT;AACF;AAEA,oBAAoB;AACpB,IAAIU,aAAa,IAAIC,qBAAU,CAAC;IAC9BC,QAAQP,oBAAW;IACnBQ,QAAQ;AACV;AAEA,iBAAiB;AACjBjD,IAAIyB,GAAG,CAACyB,IAAAA,uBAAO,EAAC;IACdC,OAAOL;IACPM,QAAQjD,QAAQC,GAAG,CAACiD,cAAc;IAClCC,QAAQ;IACRC,mBAAmB;IACnBC,QAAQ;QACNC,QAAQ,KAAG,KAAG;IAChB;AACF;AACAzD,IAAIyB,GAAG,CAACnB,SAASoD,UAAU;AAC3B1D,IAAIyB,GAAG,CAACnB,SAAS4C,OAAO;AACxBlD,IAAIyB,GAAG,CAAClB;AAER,SAAS;AACTT,QAAQ,mBAAmBE,KAAKM,UAAUM;AAE1C,gBAAgB;AAChBZ,IAAI2D,MAAM,CAACzD,MAAM,IAAMqB,QAAQqC,GAAG,CAAC,CAAC,uBAAuB,EAAE1D,KAAK,CAAC"}