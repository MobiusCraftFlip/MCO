{"version":3,"sources":["../src/index.js"],"sourcesContent":["require(\"dotenv\").config()\nconst express = require(\"express\");\nconst app = express();\nconst port = process.env.PORT || 8080;\nconst mongoose = require(\"mongoose\");\nconst passport = require(\"passport\");\nconst flash = require(\"connect-flash\");\nconst morgan = require(\"morgan\");\nconst cookieParser = require(\"cookie-parser\");\nconst bodyParser = require(\"body-parser\");\nconst session = require(\"express-session\");\nconst path = require(\"path\");\n\nconst User = require(\"./models/user.model\").default;\nconst dbConfig = require(\"./config/database.config\");\nconst { randomBytes } = require(\"crypto\");\nconst { refreshFlags } = require(\"./util/flags\");\n\n// Configuration\nmongoose.connect(dbConfig.url, {\n  useNewUrlParser: true\n}).then(() => {\n  refreshFlags()\n})\nrequire(\"./config/passport.config\")(passport);\n\n// Express setup\napp.use(morgan(\"dev\"));\napp.use(cookieParser());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.set(\"view engine\", \"ejs\");\napp.set('view options', {root: path.join(__dirname, \"..\",\"views\")});\n\napp.set(\"views\", path.join(__dirname, \"..\",\"views\"));\napp.use(express.static(__dirname + \"/../public\"));\n\n// Passport setup\napp.use(session({\n  secret: randomBytes(64).toString(\"base64\"),\n  resave: false,\n  saveUninitialized: false\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\n\n// Routes\nrequire(\"./routes/routes\")(app, passport, User);\n\n// Launch server\napp.listen(port, () => console.log(`server started on port ${port}`));"],"names":["require","config","express","app","port","process","env","PORT","mongoose","passport","flash","morgan","cookieParser","bodyParser","session","path","User","default","dbConfig","randomBytes","refreshFlags","connect","url","useNewUrlParser","then","use","urlencoded","extended","json","set","root","join","__dirname","static","secret","toString","resave","saveUninitialized","initialize","listen","console","log"],"mappings":"aAAAA,QAAQ,UAAUC,MAAM,GACxB,MAAMC,QAAUF,QAAQ,WACxB,MAAMG,IAAMD,UACZ,MAAME,KAAOC,QAAQC,GAAG,CAACC,IAAI,EAAI,KACjC,MAAMC,SAAWR,QAAQ,YACzB,MAAMS,SAAWT,QAAQ,YACzB,MAAMU,MAAQV,QAAQ,iBACtB,MAAMW,OAASX,QAAQ,UACvB,MAAMY,aAAeZ,QAAQ,iBAC7B,MAAMa,WAAab,QAAQ,eAC3B,MAAMc,QAAUd,QAAQ,mBACxB,MAAMe,KAAOf,QAAQ,QAErB,MAAMgB,KAAOhB,QAAQ,uBAAuBiB,OAAO,CACnD,MAAMC,SAAWlB,QAAQ,4BACzB,KAAM,CAAEmB,WAAW,CAAE,CAAGnB,QAAQ,UAChC,KAAM,CAAEoB,YAAY,CAAE,CAAGpB,QAAQ,gBAGjCQ,SAASa,OAAO,CAACH,SAASI,GAAG,CAAE,CAC7BC,gBAAiB,IACnB,GAAGC,IAAI,CAAC,KACNJ,cACF,GACApB,QAAQ,4BAA4BS,UAGpCN,IAAIsB,GAAG,CAACd,OAAO,QACfR,IAAIsB,GAAG,CAACb,gBACRT,IAAIsB,GAAG,CAACZ,WAAWa,UAAU,CAAC,CAC5BC,SAAU,IACZ,IACAxB,IAAIsB,GAAG,CAACZ,WAAWe,IAAI,IACvBzB,IAAI0B,GAAG,CAAC,cAAe,OACvB1B,IAAI0B,GAAG,CAAC,eAAgB,CAACC,KAAMf,KAAKgB,IAAI,CAACC,UAAW,KAAK,QAAQ,GAEjE7B,IAAI0B,GAAG,CAAC,QAASd,KAAKgB,IAAI,CAACC,UAAW,KAAK,UAC3C7B,IAAIsB,GAAG,CAACvB,QAAQ+B,MAAM,CAACD,UAAY,eAGnC7B,IAAIsB,GAAG,CAACX,QAAQ,CACdoB,OAAQf,YAAY,IAAIgB,QAAQ,CAAC,UACjCC,OAAQ,MACRC,kBAAmB,KACrB,IACAlC,IAAIsB,GAAG,CAAChB,SAAS6B,UAAU,IAC3BnC,IAAIsB,GAAG,CAAChB,SAASK,OAAO,IACxBX,IAAIsB,GAAG,CAACf,SAGRV,QAAQ,mBAAmBG,IAAKM,SAAUO,MAG1Cb,IAAIoC,MAAM,CAACnC,KAAM,IAAMoC,QAAQC,GAAG,CAAC,CAAC,uBAAuB,EAAErC,KAAK,CAAC"}