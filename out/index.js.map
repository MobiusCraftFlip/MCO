{"version":3,"sources":["../src/index.js"],"sourcesContent":["require(\"dotenv\").config()\nconst express = require(\"express\");\nconst app = express();\nconst port = process.env.PORT || 8080;\nconst mongoose = require(\"mongoose\");\nconst passport = require(\"passport\");\nconst flash = require(\"connect-flash\");\nconst morgan = require(\"morgan\");\nconst cookieParser = require(\"cookie-parser\");\nconst bodyParser = require(\"body-parser\");\nconst session = require(\"express-session\");\nconst path = require(\"path\");\n\nconst User = require(\"./models/user.model\").default;\nconst dbConfig = require(\"./config/database.config\");\nconst { randomBytes } = require(\"crypto\");\nconst { refreshFlags } = require(\"./models/flags.model\");\n\n// Configuration\nmongoose.connect(dbConfig.url, {\n  useNewUrlParser: true\n}).then(() => {\n  refreshFlags\n})\nrequire(\"./config/passport.config\")(passport);\n\n// Express setup\napp.use(morgan(\"dev\"));\napp.use(cookieParser());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.set(\"view engine\", \"ejs\");\napp.set('view options', {root: path.join(__dirname, \"..\",\"views\")});\n\napp.set(\"views\", path.join(__dirname, \"..\",\"views\"));\napp.use(express.static(__dirname + \"/../public\"));\n\n// Passport setup\napp.use(session({\n  secret: randomBytes(64).toString(\"base64\"),\n  resave: false,\n  saveUninitialized: false\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\n\n// Routes\nrequire(\"./routes/routes\")(app, passport, User);\n\n// Launch server\napp.listen(port, () => console.log(`server started on port ${port}`));"],"names":["require","config","express","app","port","process","env","PORT","mongoose","passport","flash","morgan","cookieParser","bodyParser","session","path","User","default","dbConfig","randomBytes","refreshFlags","connect","url","useNewUrlParser","then","use","urlencoded","extended","json","set","root","join","__dirname","static","secret","toString","resave","saveUninitialized","initialize","listen","console","log"],"mappings":";AAAAA,QAAQ,UAAUC,MAAM;AACxB,MAAMC,UAAUF,QAAQ;AACxB,MAAMG,MAAMD;AACZ,MAAME,OAAOC,QAAQC,GAAG,CAACC,IAAI,IAAI;AACjC,MAAMC,WAAWR,QAAQ;AACzB,MAAMS,WAAWT,QAAQ;AACzB,MAAMU,QAAQV,QAAQ;AACtB,MAAMW,SAASX,QAAQ;AACvB,MAAMY,eAAeZ,QAAQ;AAC7B,MAAMa,aAAab,QAAQ;AAC3B,MAAMc,UAAUd,QAAQ;AACxB,MAAMe,OAAOf,QAAQ;AAErB,MAAMgB,OAAOhB,QAAQ,uBAAuBiB,OAAO;AACnD,MAAMC,WAAWlB,QAAQ;AACzB,MAAM,EAAEmB,WAAW,EAAE,GAAGnB,QAAQ;AAChC,MAAM,EAAEoB,YAAY,EAAE,GAAGpB,QAAQ;AAEjC,gBAAgB;AAChBQ,SAASa,OAAO,CAACH,SAASI,GAAG,EAAE;IAC7BC,iBAAiB;AACnB,GAAGC,IAAI,CAAC;IACNJ;AACF;AACApB,QAAQ,4BAA4BS;AAEpC,gBAAgB;AAChBN,IAAIsB,GAAG,CAACd,OAAO;AACfR,IAAIsB,GAAG,CAACb;AACRT,IAAIsB,GAAG,CAACZ,WAAWa,UAAU,CAAC;IAC5BC,UAAU;AACZ;AACAxB,IAAIsB,GAAG,CAACZ,WAAWe,IAAI;AACvBzB,IAAI0B,GAAG,CAAC,eAAe;AACvB1B,IAAI0B,GAAG,CAAC,gBAAgB;IAACC,MAAMf,KAAKgB,IAAI,CAACC,WAAW,MAAK;AAAQ;AAEjE7B,IAAI0B,GAAG,CAAC,SAASd,KAAKgB,IAAI,CAACC,WAAW,MAAK;AAC3C7B,IAAIsB,GAAG,CAACvB,QAAQ+B,MAAM,CAACD,YAAY;AAEnC,iBAAiB;AACjB7B,IAAIsB,GAAG,CAACX,QAAQ;IACdoB,QAAQf,YAAY,IAAIgB,QAAQ,CAAC;IACjCC,QAAQ;IACRC,mBAAmB;AACrB;AACAlC,IAAIsB,GAAG,CAAChB,SAAS6B,UAAU;AAC3BnC,IAAIsB,GAAG,CAAChB,SAASK,OAAO;AACxBX,IAAIsB,GAAG,CAACf;AAER,SAAS;AACTV,QAAQ,mBAAmBG,KAAKM,UAAUO;AAE1C,gBAAgB;AAChBb,IAAIoC,MAAM,CAACnC,MAAM,IAAMoC,QAAQC,GAAG,CAAC,CAAC,uBAAuB,EAAErC,KAAK,CAAC"}